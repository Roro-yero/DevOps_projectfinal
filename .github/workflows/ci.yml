name: CI Pipeline

# Déclencheur pour le pipeline : sur chaque push ou pull request sur la branche main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: user
          POSTGRES_DB: mydatabase
        options: --health-cmd="pg_isready -U user" --health-interval=5s --health-timeout=5s --health-retries=5

    steps:
    - name: Checkout du code
      uses: actions/checkout@v2

    - name: Build Docker image for backend
      run: |
        docker build -t backend_app ./backend  # Construire l'image Docker du backend

    - name: Build Docker image for frontend
      run: |
        docker build -t frontend_app ./frontend  # Construire l'image Docker du frontend

    # Attendre que PostgreSQL soit prêt
    - name: Wait for PostgreSQL to be ready
      run: |
        docker exec ${{ job.services.postgres.id }} pg_isready -U user  # Vérifie que PostgreSQL est prêt

    # Créer la table et importer les données depuis le CSV
    - name: Create table and import data
      run: |
        docker exec -i ${{ job.services.postgres.id }} psql -U user -d mydatabase -f /docker-entrypoint-initdb.d/init-db.sql

    - name: Test API with curl
      run: |
        curl --fail http://localhost:8000/search/?query=romain  # Teste la recherche avec curl
        curl --fail http://localhost:8000/search/?query=yerolymos

    - name: Clean up Docker containers
      run: |
        docker-compose down -v

